{
  "policy": {
    "name": "OS Extended (Debian-based Linux) v3 CS", 
    "url": "https://api.cloudpassage.com/v1/policies/b9201960dbec0132fdd73c764e10c221", 
    "used_by": [
      {
        "id": "dd1bcf0a03d911e58dee13fe5e599fba", 
        "name": "Canary"
      }, 
      {
        "id": "8ac522a0dbeb01320bd73c764e108057", 
        "name": "Graphite Server"
      }, 
      {
        "id": "9b45e4d0dbeb01320bd63c764e108057", 
        "name": "Beagles"
      }, 
      {
        "id": "795fe080dbeb013270bc3c764e10c220", 
        "name": "Apache Proxy"
      }
    ], 
    "platform": "linux", 
    "rules": [
      {
        "comment": "Shell sessions are commonly only used by users or processes with some level of privileged access to server resources. Shell sessions inactive for a period of time should be closed automatically to mitigate network hijacks, local access to the client terminal or remote access to the client terminal via malware. 15 minutes is often considered reasonable time for shell timeouts. ", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": false, 
        "checks": [
          {
            "files": "/etc/profile.d/autologout.csh", 
            "exportable": true, 
            "object_type": "file_presence", 
            "suggestion": "The /etc/profile.d/autologout.csh script should exist.\n\nHere are example commands that you may need to customize for your environment.\n\nsudo touch /etc/profile.d/autologout.csh", 
            "active": true, 
            "present": true
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "set -r autologout", 
            "desired_value": "15", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "The /etc/profile.d/autologout.csh script should contain the following line to implement a 15 minute tcsh inactivity timeout:\n\nset -r autologout 15\n\nNote: the -r parameter sets the environment variable to read-only, preventing modification by the user after session initialization.\n\nHere are example commands that you may need to customize for your environment.  Either add:\nset -r autologout 15\nto /etc/profile.d/autologout.csh by hand, or copy and paste these commands:\nsudo sed -i -e 's/#*\\(set -r autologout.*\\)/#\\1/i' /etc/profile.d/autologout.csh\necho 'set -r autologout 15' | sudo tee -a /etc/profile.d/autologout.csh\n\n**** NOTE: These settings will not take effect until all users have logged out and logged back in. ****", 
            "active": true, 
            "config_file_path": "/etc/profile.d/autologout.csh"
          }, 
          {
            "files": "/etc/profile.d/autologout.csh", 
            "exportable": true, 
            "object_type": "file_user_ownership", 
            "suggestion": "The /etc/profile.d/autologout.csh file is used to control bash session timeouts due to inactivity. It should have root user ownership.\n\nHere are example commands that you may need to customize for your environment:\nchown root /etc/profile.d/autologout.csh\n", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/etc/profile.d/autologout.csh", 
            "exportable": true, 
            "object_type": "file_group_ownership", 
            "suggestion": "The /etc/profile.d/autologout.csh file is used to control bash session timeouts due to inactivity. It should have root group ownership.\n\nHere are example commands that you may need to customize for your environment:\nchgrp root /etc/profile.d/autologout.csh\n", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/etc/profile.d/autologout.csh", 
            "exportable": true, 
            "object_type": "file_acl", 
            "acls": "755", 
            "suggestion": "The /etc/profile.d/autologout.csh file is used to control bash session timeouts due to inactivity. It should have an ACL of 755.\n\nHere are example commands that you may need to customize for your environment:\nchmod 755 /etc/profile.d/autologout.csh", 
            "active": true
          }
        ], 
        "name": "Inactivity timeout for tcsh shells"
      }, 
      {
        "comment": "Passwords that are too short or are not changed at a reasonable frequency are a major cause of system compromises. Brute-force account attacks via sshd interfaces is one of the most common forms of attacker reconnaissance. Issues of password length, complexity, rotation and re-use are matters of individual policy. The settings below reflect a rational starting point based on the idea that a longer password is \"survivable\" for a longer period of time.\r\n\r\n", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "PASS_MAX_DAYS", 
            "desired_value": "90", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "Server account passwords should be rotated each three months at an absolute minimum.\r\n\r\nIf this check fails, ensure that the following line appears in the /etc/login.defs file:\r\n\r\nPASS_MAX_DAYS 90\r\n\r\nIMPORTANT: the PASS_MAX_DAYS, PASS_MIN_DAYS and PASS_WARN_AGE are only used at the time of account creation. Any changes to these settings won't affect existing accounts, which requires updating the /etc/shadow file manually or using system utilities. Refer to the man page for login.defs for details.", 
            "active": true, 
            "config_file_path": "/etc/login.defs"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "PASS_MIN_LEN", 
            "desired_value": "10", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "Passwords of at least ten characters are strongly recommended, especially considering that construction rules requiring both numbers and letters cannot be enforced by default.\r\n\r\nIf this check fails, ensure that the following line appears in the /etc/login.defs file:\r\n\r\nPASS_MIN_LEN 10\r\n\r\nIMPORTANT: the PASS_MAX_DAYS, PASS_MIN_DAYS and PASS_WARN_AGE are only used at the time of account creation. Existing users' password expiration rules should be double-checked in the /etc/shadow file to ensure that password changes (and therefor changes to minimum password length) are enforced.\r\n\r\nTIP: you can use the \"chage\" command to evaluate and manage account password status. Refer to \"man chage\" for more information. Here is an example of a one-line script that displays password settings and status for all system users:\r\n\r\nfor user in `cat /etc/passwd| cut -f1 -d':'`; do echo \"$user password status:\" && chage -l $user && echo; done\r\n", 
            "active": false, 
            "config_file_path": "/etc/login.defs"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "PASS_WARN_AGE", 
            "desired_value": "7", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "The PASS_WARN_AGE setting dictates when users begin to see warnings about upcoming password expiration.\r\n\r\nIf this check fails, ensure that the following line appears in the /etc/login.defs file:\r\n\r\nPASS_WARN_AGE 7\r\n\r\nIMPORTANT: the PASS_MAX_DAYS, PASS_MIN_DAYS and PASS_WARN_AGE are only used at the time of account creation. Existing users' password expiration rules should be double-checked in the /etc/shadow file to ensure that password changes (and therefor changes to minimum password length) are enforced.\r\n\r\nTIP: you can use the \"chage\" command to evaluate and manage account password status. Refer to \"man chage\" for more information. Here is an example of a one-line script that displays password settings and status for all system users:\r\n\r\nfor user in `cat /etc/passwd| cut -f1 -d':'`; do echo \"$user password status:\" && chage -l $user && echo; done\r\n", 
            "active": true, 
            "config_file_path": "/etc/login.defs"
          }, 
          {
            "files": "/etc/pam.d/common-password", 
            "exportable": true, 
            "object_type": "file_string_presence", 
            "patterns": "password.*\\spam_unix.so.*\\smin=10", 
            "suggestion": "Passwords of at least 10 characters are strongly recommended, especially considering that construction rules requiring both numbers and letters cannot be enforced by default.\r\n\r\nThe following may need to be customized for your environment.  Add:\r\nmin=10\r\nto the following line in /etc/pam.d/common-password by hand:\r\npassword ... pam_unix.so ... min=10 ...\r\n\r\nIMPORTANT: the password length is only checked at the time of account creation or password update.  Existing users' password length should be double-checked to ensure that password minimum length is enforced.\r\n", 
            "active": true, 
            "present": true
          }
        ], 
        "name": "User account password policies with min length extended"
      }, 
      {
        "comment": "The PROMPT option allows the console user to perform an interactive system startup, in which it is possible to select the set of services which are started on boot. Using interactive boot, the console user could disable auditing, firewalls, or other services, weakening system security. Although physical access to a console is not available on cloud servers, remote KVM and other console tools do allow for interaction with cloud server consoles.", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": false, 
        "checks": [
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "PROMPT", 
            "desired_value": "no", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "=", 
            "suggestion": "** Redhat, Centos, and Fedora systems only **\n\nEnabling the PROMPT option to allow for interactive boot can be abused to exploit a server.\n\nHere are example commands that you may need to customize for your environment.  Either add:\nPROMPT=no\nto /etc/sysconfig/init by hand, or copy and paste these commands:\nsudo sed -i -e 's/#*\\(PROMPT.*\\)/#\\1/i' /etc/sysconfig/init\necho 'PROMPT=no' | sudo tee -a /etc/sysconfig/init\n", 
            "active": true, 
            "config_file_path": "/etc/sysconfig/init"
          }
        ], 
        "name": "Disable interactive boot"
      }, 
      {
        "comment": "The anacron environment augments (and in some cases replaces) the cron scheduling system. Anacron is used to schedule process execution for a wide range of system functions. Accidental or malicious corruption of the table of scheduled jobs and configuration can significantly impact system operations. Malicious users may also use a poorly secured anacron environment to create or restore malicious configurations or software. Close protection of all scheduling systems is critical to server security. \n\nNOTE: Many server are running anacron by default without the system owners' knowledge, making it a popular target for unseen exploitation by attackers.", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": false, 
        "checks": [
          {
            "files": "/etc/anacrontab", 
            "exportable": true, 
            "object_type": "file_acl", 
            "acls": "644", 
            "suggestion": "The /etc/anacrontab file may contain some or all of the system's process schedule. It should have an ACL of 644 with root user and group ownership.\n\nIf this check fails use the chmod command to change the ACL on this file to 644:\n\nchmod 600 /etc/anacrontab", 
            "active": true
          }, 
          {
            "files": "/etc/anacrontab", 
            "exportable": true, 
            "object_type": "file_user_ownership", 
            "suggestion": "The /etc/anacrontab file may contain some or all of the system's process schedule. It should have an ACL of 644 with root user and group ownership.\n\nIf this check fails use the chown command to set user and group ownership to root:\n\nchown root:root /etc/anacrontab\n", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/etc/anacrontab", 
            "exportable": true, 
            "object_type": "file_group_ownership", 
            "suggestion": "The /etc/anacrontab file may contain some or all of the system's process schedule. It should have an ACL of 644 with root user and group ownership.\n\nIf this check fails use the chown command to set user and group ownership to root:\n\nchown root:root /etc/anacrontab\n", 
            "active": true, 
            "owned_by": "root"
          }
        ], 
        "name": "Protect anacron tables and configuration"
      }, 
      {
        "comment": "A core dump file is the memory image of an executable program when it was terminated by the operating system\ndue to errant behavior. In most cases, only software developers would legitimately need to access these files. The core dump files often contain sensitive information, or unnecessarily occupy large amounts of disk space. If accessible, core dumps can be used by attackers to examine the effect of exploit attempts.\n\nIf core dumps are required for troubleshooting purposes, enabling core dumps on a temporary basis only.\n", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "* hard core", 
            "desired_value": "0", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "To disable core dumps for all users, add or correct the following line in /etc/security/limits.conf:\n\n* hard core 0\n\nThis command will set the limit for core dumps to zero bytes (disabled).", 
            "active": false, 
            "config_file_path": "/etc/security/limits.conf"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "fs.suid_dumpable", 
            "desired_value": "NOT: 1,2", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "To ensure that core dumps can never be made by setuid programs, edit /etc/sysctl.conf and add or correct the line:\n\nfs.suid_dumpable = 0", 
            "active": true, 
            "config_file_path": "/etc/sysctl.conf"
          }, 
          {
            "comment_character": "", 
            "exportable": true, 
            "config_item": "", 
            "desired_value": "NOT: 1,2", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "", 
            "suggestion": "To ensure that core dumps can never be made by setuid programs:\n\necho 0 | sudo tee -a /proc/sys/fs/suid_dumpable", 
            "active": true, 
            "config_file_path": "/proc/sys/fs/suid_dumpable"
          }
        ], 
        "name": "Disable core dumps"
      }, 
      {
        "comment": "The /etc/crontab file is a table of commands to be run by the cron daemon according to each job entry's schedule. This makes the crontab file one of the most sensitive files on the system. Most Linux distributions will not run crontab files will poorly configured permissions. The /etc/crontab file should not be executable by any user and writable by root only.\n\nNOTE: most systems recognize cron job scheduling in at least three places - /etc/crontab, /var/spool/cron, and a number of cron directories in the /etc directory (e.g. /etc/cron.daily). All of these areas must be protected.", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "files": "/etc/crontab", 
            "exportable": true, 
            "object_type": "file_user_ownership", 
            "suggestion": "The /etc/crontab file should be owned by the root user. Use the chown command to change user and group ownership to root. \n\nExample:\n\nchown root:root /etc/crontab", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/etc/crontab", 
            "exportable": true, 
            "object_type": "file_group_ownership", 
            "suggestion": "The /etc/crontab file should be owned by the root user. Use the chown command to change user and group ownership to root. \n\nExample:\n\nchown root:root /etc/crontab", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/etc/crontab", 
            "exportable": true, 
            "object_type": "file_acl", 
            "acls": "644", 
            "suggestion": "The /etc/crontab file should have minimal permissions. Most systems will accept a crontab mode of 600, but some system require a crontab mode of 644. System default is 644. Use the chmod command to set the mode you desire. \n\nExample:\n\nchmod 600 /etc/crontab\nor\nchmod 644 /etc/crontab", 
            "active": true
          }
        ], 
        "name": "Protect cron legacy /etc/crontab file"
      }, 
      {
        "comment": "The /etc/gshadow file contains shadowed information for group accounts such as encrypted group passwords and group administrators. A poorly secured /etc/gshadow file can expose a server to gross compromise by allowing an attacker to tamper with or exploit group administrative rights or exposing encrypted passwords to dictionary attack. The following checks look at the permissions of this file.", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "files": "/etc/gshadow", 
            "exportable": true, 
            "object_type": "file_acl", 
            "acls": "NOT: 1**,2**,3**,5**,6**,7**,*1*,*2*,*3*,*4*,*5*,*6*,*7*,**1,**2,**3,**4,**5,**6,**7", 
            "suggestion": "The /etc/gshadow file should have a ACL of 400 on Redhat, Centos, and Fedora systems.\n \nUse the chmod command to modify the permissions on this file:\n\nchmod 400 /etc/gshadow\n", 
            "active": false
          }, 
          {
            "files": "/etc/gshadow", 
            "exportable": true, 
            "object_type": "file_user_ownership", 
            "suggestion": "The /etc/gshadow file should have the user ownership set to \"root\".\n\nUse the chown command to modify user and group ownership of this file to the root user:\n\nchown root:root /etc/gshadow\n", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/etc/gshadow", 
            "exportable": true, 
            "object_type": "file_group_ownership", 
            "suggestion": "The /etc/gshadow file should have the group ownership set to \"root\" on Redhat, Centos, and Fedora systems.\n\nUse the chgrp command to modify group ownership of this file to the root user:\n\nchgrp root /etc/gshadow\n", 
            "active": false, 
            "owned_by": "root"
          }, 
          {
            "files": "/etc/gshadow", 
            "exportable": true, 
            "object_type": "file_acl", 
            "acls": "640", 
            "suggestion": "The /etc/gshadow file should have a ACL of 640 on Debian and Ubuntu systems.\n \nUse the chmod command to modify the permissions on this file:\n\nchmod 640 /etc/gshadow\n", 
            "active": true
          }, 
          {
            "files": "/etc/gshadow", 
            "exportable": true, 
            "object_type": "file_group_ownership", 
            "suggestion": "The /etc/gshadow file should have the group ownership set to \"shadow\" on Debian and Ubuntu systems.\n\nUse the chgrp command to modify group ownership of this file to the shadow group:\n\nchgrp shadow /etc/gshadow\n", 
            "active": true, 
            "owned_by": "shadow"
          }
        ], 
        "name": "Permissions on /etc/gshadow"
      }, 
      {
        "comment": "Shell sessions are commonly only used by users or processes with some level of privileged access to server resources. Shell sessions inactive for a period of time should be closed automatically to mitigate network hijacks, local access to the client terminal or remote access to the client terminal via malware. 15 minutes is often considered reasonable time for shell timeouts. ", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": false, 
        "checks": [
          {
            "files": "/etc/profile.d/tmout.sh", 
            "exportable": true, 
            "object_type": "file_presence", 
            "suggestion": "The /etc/profile.d/tmout.sh script should exist.\n\nHere are example commands that you may need to customize for your environment.\nsudo touch /etc/profile.d/tmout.sh", 
            "active": true, 
            "present": true
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "TMOUT", 
            "desired_value": "900", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "=", 
            "suggestion": "The /etc/profile.d/tmout.sh script should exist and should contain the following lines to implement a 15 minute bash inactivity timeout:\n\nTMOUT=900\n\nNote: the readonly keyword prevents users from manually changing the timeout setting.\n\nHere are example commands that you may need to customize for your environment.  Either add:\nTMOUT=900\nto /etc/profile.d/tmout.sh by hand, or copy and paste these commands:\nsudo sed -i -e 's/#*\\(TMOUT.*\\)/#\\1/i' /etc/profile.d/tmout.sh\necho 'TMOUT=900' | sudo tee -a /etc/profile.d/tmout.sh\n\n**** NOTE: These settings will not take effect until all users have logged out and logged back in. ****", 
            "active": true, 
            "config_file_path": "/etc/profile.d/tmout.sh"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "readonly", 
            "desired_value": "TMOUT", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "The /etc/profile.d/tmout.sh script should exist and should contain the following line to prevent users from manually changing the timeout setting.\n\nreadonly TMOUT\n\nHere are example commands that you may need to customize for your environment.  Either add:\nreadonly TMOUT\nto /etc/profile.d/tmout.sh by hand, or copy and paste these commands:\nsudo sed -i -e 's/#*\\(readonly.*\\)/#\\1/i' /etc/profile.d/tmout.sh\necho 'readonly TMOUT' | sudo tee -a /etc/profile.d/tmout.sh\n\n**** NOTE: These settings will not take effect until all users have logged out and logged back in. ****", 
            "active": true, 
            "config_file_path": "/etc/profile.d/tmout.sh"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "export", 
            "desired_value": "TMOUT", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "The /etc/profile.d/tmout.sh script should exist and should contain the following line to export the environment variable TMOUT:\n\nexport TMOUT\n\nHere are example commands that you may need to customize for your environment.  Either add:\nexport TMOUT\nto /etc/profile.d/tmout.sh by hand, or copy and paste these commands:\nsudo sed -i -e 's/#*\\(export.*\\)/#\\1/i' /etc/profile.d/tmout.sh\necho 'export TMOUT' | sudo tee -a /etc/profile.d/tmout.sh\n\n**** NOTE: These settings will not take effect until all users have logged out and logged back in. ****", 
            "active": true, 
            "config_file_path": "/etc/profile.d/tmout.sh"
          }, 
          {
            "files": "/etc/profile.d/tmout.sh", 
            "exportable": true, 
            "object_type": "file_user_ownership", 
            "suggestion": "The /etc/profile.d/tmout.sh file is used to control bash session timeouts due to inactivity. It should have root user ownership. \n\nsudo chown root /etc/profile.d/tmout.sh", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/etc/profile.d/tmout.sh", 
            "exportable": true, 
            "object_type": "file_group_ownership", 
            "suggestion": "The /etc/profile.d/tmout.sh file is used to control bash session timeouts due to inactivity. It should have root group ownership.\n\nchgrp root /etc/profile.d/tmout.sh", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/etc/profile.d/tmout.sh", 
            "exportable": true, 
            "object_type": "file_acl", 
            "acls": "755", 
            "suggestion": "The /etc/profile.d/tmout.sh file is used to control bash session timeouts due to inactivity. It should have an ACL of 755.\n\nchmod 755 /etc/profile.d/tmout.sh", 
            "active": true
          }
        ], 
        "name": "Inactivity timeout for bash sessions"
      }, 
      {
        "comment": "The user's effective umask determines the default ACL of new files created by users. With a default umask setting of 077, files and directories created by users will not be accessible by any other user on the system (except for root-privileged users).\n\nAlthough users can usually override system umask settings, the default system umask can be controlled in a number of locations. A default umask of 077 is highly encouraged.", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "umask", 
            "desired_value": "077", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "The bash shell processes /etc/profile instructions when a new shell session is started. Settings to be applied to all users' environments are placed in this file, including the system-wide umask value. A default umask of 077 is recommended by adding this line to the /etc/profile script:\n\numask 077\n\nNOTE: users can still manually override this setting, but a sensible default can prevent accidental exposures that will lead to compromise.", 
            "active": true, 
            "config_file_path": "/etc/profile"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "UMASK", 
            "desired_value": "077", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "The  /etc/login.defs  file  defines  the  site-specific  configuration  for the shadow login suite. The UMASK setting is used by useradd and newusers for creating new home directories. \n\nThe UMASK setting should be 077 in the /etc/login.defs file:\n\nUMASK 077\n\n\n\n", 
            "active": true, 
            "config_file_path": "/etc/login.defs"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "umask", 
            "desired_value": "077", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "The /root/.bashrc script runs each time the root user initiates a bash shell. The root user's umask should always be 077 given the sensitivity of root operations. The .bashrc script should set the umask accordingly with the following command:\n\numask 077\n", 
            "active": true, 
            "config_file_path": "/root/.bashrc"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "umask", 
            "desired_value": "077", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "The /root/.bash_profile script runs each time the root user initially logs in. The root user's umask should always be 077 given the sensitivity of root operations. The .bash_profile script should set the umask accordingly with the following command:\n\numask 077\n", 
            "active": true, 
            "config_file_path": "/root/.bash_profile"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "umask", 
            "desired_value": "077", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "The /root/.cshrc script runs each time the root user initiates a C shell. The root user's umask should always be 077 given the sensitivity of root operations. The .cshrc script should set the umask accordingly with the following command:\n\numask 077\n", 
            "active": true, 
            "config_file_path": "/root/.cshrc"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "umask", 
            "desired_value": "077", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "The /root/.tcshrc script runs each time the root user initiates a tcsh session. The root user's umask should always be 077 given the sensitivity of root operations. The .tcshrc script should set the umask accordingly with the following command:\n\numask 077", 
            "active": true, 
            "config_file_path": "/root/.tcshrc"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "umask", 
            "desired_value": "077", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "The /etc/bashrc script is commonly called from individual user ~/.bashrc startup scripts. The user's initial umask setting can be set from this script by adding the command:\n\numask 077", 
            "active": true, 
            "config_file_path": "/etc/bashrc"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "umask", 
            "desired_value": "077", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "The /etc/csh.cshrc file is the system-wide profile for tcsh shell users and is read by subshells. The users' umask for tcsh sessions can be set by adding the command to this script:\n\numask 077", 
            "active": true, 
            "config_file_path": "/etc/csh.cshrc"
          }
        ], 
        "name": "Ensure sensible user umask defaults"
      }, 
      {
        "comment": "The /var/log/utmp file contains records of recent user logins (most commonly accessed via the 'last' command). Weak control over this file may permit attackers or malicious users to avoid detection of unauthorized activity. It also allows regular users to compile a list of other system users. These can then be used to perform brute-force attacks.", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "files": "/var/run/utmp", 
            "exportable": true, 
            "object_type": "file_user_ownership", 
            "suggestion": "The /var/run/utmp file should be owned by the root user. Use the chown command to change user and group ownership to root. Example:\n\nchown root:root /var/run/utmp", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/var/run/utmp", 
            "exportable": true, 
            "object_type": "file_group_ownership", 
            "suggestion": "The /var/log/utmp file should be owned by the root user. Use the chown command to change user and group ownership to root. Example:\n\nchown root:root /var/run/utmp", 
            "active": true, 
            "owned_by": "utmp"
          }, 
          {
            "files": "/var/run/utmp", 
            "exportable": true, 
            "object_type": "file_acl", 
            "acls": "664", 
            "suggestion": "The /var/log/tab file should have a file mode of 664 on most systems. Use the chmod command to set the mode as appropriate. Example:\n\nchmod 664 /var/log/wtmp", 
            "active": true
          }, 
          {
            "files": "/var/run/utmp", 
            "exportable": true, 
            "object_type": "file_acl", 
            "acls": "660", 
            "suggestion": "The /var/run/utmp file should have a file mode of 664 on most systems. Use the chmod command to set the mode as appropriate. Example:\n\nchmod 660 /var/run/utmp", 
            "active": false
          }
        ], 
        "name": "Security of /var/log/utmp file"
      }, 
      {
        "comment": "TCP syn-flood attacks establish large numbers of half-open TCP connections to sap resources from the server. Many Linux distributions have the ability to protect against this, but this protection is disabled by default.\n\n\n\n", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "network_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "comment_character": "", 
            "exportable": true, 
            "config_item": "", 
            "desired_value": "1", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "", 
            "suggestion": "Setting the tcp_syncookies option in /etc/sysctl.conf to the integer \"1\" will add protection from TCP SYN-flood denial-of-service attacks.", 
            "active": true, 
            "config_file_path": "/proc/sys/net/ipv4/tcp_syncookies"
          }
        ], 
        "name": "Enable protection against TCP SYN flood attacks"
      }, 
      {
        "comment": "ICMP redirects are enabled by default on most Linux distributions. These messages serve to update a server's routing table if the server is being used as a router. If enabled, attackers can craft malicious ICMP redirect messages and create a denial of service condition on the server.\n\nIf ICMP redirects are not used in the network for route updates and if the server is not acting as a router or a gateway then ICMP redirects should be disabled on the server. Both of these situations are not common in cloud computing environments. ", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "network_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "comment_character": "", 
            "exportable": true, 
            "config_item": "", 
            "desired_value": "0", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "", 
            "suggestion": "The /etc/sysctl.conf file may be edited directly or the following commands may be used to make the changes:\n\n/sbin/sysctl -w net.ipv4.conf.all.accept_redirects = 0\n\nIMPORTANT: a restart of the networking environment is required for these changes to take effect.  You can refresh the network configuration with following commands:\nservice networking stop\nservice networking start", 
            "active": true, 
            "config_file_path": "/proc/sys/net/ipv4/conf/all/accept_redirects"
          }, 
          {
            "comment_character": "", 
            "exportable": true, 
            "config_item": "", 
            "desired_value": "0", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "", 
            "suggestion": "The /etc/sysctl.conf file may be edited directly or the following commands may be used to make the changes:\n\n/sbin/sysctl -w net.ipv4.conf.all.send_redirects = 0\n\nIMPORTANT: a restart of the networking environment is required for these changes to take effect. You can refresh the network configuration with following commands:\nservice networking stop\nservice networking start", 
            "active": true, 
            "config_file_path": "/proc/sys/net/ipv4/conf/all/send_redirects"
          }
        ], 
        "name": "Disable ICMP redirects"
      }, 
      {
        "comment": "ICMP echo messages (also known as \"ping\" messages) are often used to probe systems and can be used for DoS attacks and in some cases can further other attacks. If not explicitly needed, ICMP requests should be ignored.\n\n", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "network_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "comment_character": "", 
            "exportable": true, 
            "config_item": "", 
            "desired_value": "1", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "", 
            "suggestion": "In /etc/sysctl.conf changing the value of net.ipv4.icmp_echo_ignore_all to the integer 1 will ignore all ICMP echo requests.", 
            "active": true, 
            "config_file_path": "/proc/sys/net/ipv4/icmp_echo_ignore_all"
          }
        ], 
        "name": "Ignore ICMP echo requests"
      }, 
      {
        "comment": "The /var/log directory contains many system log files. If permissions on this directory are not well-controlled, attackers or malicious users may be able to manipulate the contents of log files to avoid detection.", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "folders": "/var/log", 
            "exportable": true, 
            "object_type": "directory_user_ownership", 
            "suggestion": "The /var/log directory should be owned by the root group. Use the chown command to change user and group ownership. Example:\n\nchown root:root /var/log", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/var/log", 
            "exportable": true, 
            "object_type": "directory_group_ownership", 
            "suggestion": "The /var/log directory should be owned by the root group. Use the chown command to change user and group ownership. Example:\n\nchown root:root /var/log", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/var/log", 
            "exportable": true, 
            "object_type": "directory_acl", 
            "acls": "755", 
            "suggestion": "The /var/log directory should have an ACL of 751. Use the chmod command to change the ACL. Example:\n\nchmod 755 /var/log", 
            "active": true
          }
        ], 
        "name": "Protect system log directories"
      }, 
      {
        "comment": "Every service running is another opportunity for vulnerabilities and represents additional attack area.\n\nThe services checked in this rule are rarely needed on servers but are often active by default. They include services for Bluetooth, printing, console mouse support, infrared hardware support and remote time collection. ", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "processes": "lircd, irattach, irda, gpm, hpssd, hpiod, cups-config-daemon, cupsd, hidd, sdpd, bluetoothd, hcid", 
            "exportable": true, 
            "object_type": "process_presence", 
            "suggestion": "Servers should run the minimum number of processes required to perform their designated duties in order to minimize potential vulnerabilities and reduce attack surface area. Many unnecessary processes are enabled by default. If your server does not need the processes detected by this check, disable them.\n\nHere are example commands that you may need to customize for your environment.  (If you are using Debian or Ubuntu you should install the chkconfig utility to help you by running the command: sudo apt-get install sysvconfig). To disable these services, run:\nsudo chkconfig bluetooth off\nsudo service bluetooth stop\nsudo chkconfig cups off\nsudo service cups stop\nsudo chkconfig cups-config-daemon off\nsudo service cups-config-daemon stop\nsudo chkconfig hplip off\nsudo service hplip stop\nsudo chkconfig gpm off\nsudo service gpm stop\nsudo chkconfig irattach off\nsudo service irattach stop\nsudo chkconfig lirc off\nsudo service lirc stop\n", 
            "active": true, 
            "present": "false"
          }
        ], 
        "name": "Find unnecessary processes & services"
      }, 
      {
        "comment": "The cron environment is used to schedule process execution for a wide range of system functions. Accidental or malicious corruption of the table of scheduled jobs and configuration can significantly impact system operations. Malicious users may also use a poorly secured cron environment to create or restore malicious configurations or software. Close protection of all scheduling systems is critical to server security.", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "files": "/etc/crontab", 
            "exportable": true, 
            "object_type": "file_acl", 
            "acls": "644", 
            "suggestion": "The /etc/crontab file may contain some or all of the system's process schedule. It should have an ACL of 644 with root user and group ownership.\n\nIf this check fails use the chmod command to change the ACL on this file to 644:\n\nchmod 644 /etc/crontab\n", 
            "active": true
          }, 
          {
            "files": "/etc/crontab", 
            "exportable": true, 
            "object_type": "file_user_ownership", 
            "suggestion": "The /etc/crontab file may contain some or all of the system's process schedule. It should have an ACL of 644 with root user and group ownership.\n\nIf this check fails use the chown command to set user and group ownership to root:\n\nchown root:root /etc/crontab\n", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/etc/crontab", 
            "exportable": true, 
            "object_type": "file_group_ownership", 
            "suggestion": "The /etc/crontab file may contain some or all of the system's process schedule. It should have an ACL of 644 with root user and group ownership.\n\nIf this check fails use the chown command to set user and group ownership to root:\n\nchown root:root /etc/crontab\n", 
            "active": true, 
            "owned_by": "root"
          }
        ], 
        "name": "Protect cron tables and configuration"
      }, 
      {
        "comment": "The /etc/group file defines membership and other parameters for system user-groups. These settings modify user rights and privileges. A poorly secured /etc/group file can expose a server to gross compromise by allowing an attacker to tamper with or exploit group membership. The following checks look at the permissions of this file.", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "files": "/etc/group", 
            "exportable": true, 
            "object_type": "file_acl", 
            "acls": "644", 
            "suggestion": "The /etc/group file should have a ACL of 644.\n\nUse the chmod command to modify the permissions on this file:\n\nchmod 644 /etc/group", 
            "active": true
          }, 
          {
            "files": "/etc/group", 
            "exportable": true, 
            "object_type": "file_user_ownership", 
            "suggestion": "The /etc/group file should have a user ownership of \"root\".\n\nUse the chmod command to modify the permissions on this file:\n\nchown root:root /etc/group\n", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/etc/group", 
            "exportable": true, 
            "object_type": "file_group_ownership", 
            "suggestion": "The /etc/group file should have a group ownership of \"root\".\n\nUse the chmod command to modify the permissions on this file:\n\nchgrp root:root /etc/group\n", 
            "active": true, 
            "owned_by": "root"
          }
        ], 
        "name": "Permissions on /etc/group"
      }, 
      {
        "comment": "The ssh daemon login banner can be customized by editing the /etc/issue and /etc/issue.net files and enabling its use in the sshd configuration. As a general best practice, utilizing a warning bannner specifying only authorized users and agreement to monitoring is recommended, but does not add to the overall security of the system. The login banner should also not disclose information unnecessarily. By default this rule is inactive, but should be activated if a banner is required.", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": false, 
        "checks": [
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "Banner", 
            "desired_value": "/etc/issue", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "Explicit authorization to utilize this server is required. Connections without this authorization should disconnect at once. All connections to and use of this system are subject to monitoring and recording.", 
            "active": false, 
            "config_file_path": "/etc/ssh/sshd_config"
          }
        ], 
        "name": "SSH login banner"
      }, 
      {
        "comment": "If the IPv6 protocol is not explicitly used, it should be disabled. Every protocol exposed to the network environment presents attack surface area and potential vulnerabilities to attackers.", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "install ipv6", 
            "desired_value": "/bin/true", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "", 
            "suggestion": "** Redhat, Centos, and Fedora systems that have an /etc/modprobe.conf **\n\nIn order to ensure that IPv6 networking is disabled the line \"install ipv6 /bin/true\" should be present in the /etc/modprobe.conf file or another file (e.g. local.conf) in /etc/modprobe.d\n\nHere are example commands that you may need to customize for your environment.  Either add the line 'install ipv6 /bin/true'\nto /etc/modprobe.conf by hand, or copy and paste these commands:\nsudo sed -i -e 's/#*\\(install ipv6.*\\)/#\\1/i' /etc/modprobe.conf\nsudo echo 'install ipv6 /bin/true' | sudo tee -a /etc/modprobe.conf\nsudo reboot", 
            "active": false, 
            "config_file_path": "/etc/modprobe.conf"
          }, 
          {
            "files": "/etc/modprobe.d/local.conf", 
            "exportable": true, 
            "object_type": "file_presence", 
            "suggestion": "** Redhat, Centos, and Fedora systems that do not have an /etc/modprobe.conf **\n\nIn order to ensure that IPv6 networking is disabled the line \"install ipv6 /bin/true\" should be present in the file /etc/modprobe.d/local.conf.  If the file itself does not exist you will need to create it.\n\nHere are example commands that you may need to customize for your environment.  Either create /etc/modprobe.d/local.conf by hand, or copy and paste these commands:\nsudo touch /etc/modprobe.d/local.conf", 
            "active": false, 
            "present": true
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "install ipv6", 
            "desired_value": "/bin/true", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "", 
            "suggestion": "** Redhat, Centos, and Fedora systems that do not have an /etc/modprobe.conf **\n\nIn order to ensure that IPv6 networking is disabled the line \"install ipv6 /bin/true\" should be present in the /etc/modprobe.conf file or another file (e.g. local.conf) in /etc/modprobe.d\n\nHere are example commands that you may need to customize for your environment.  Either add the line \"install ipv6 /bin/true\"\nto /etc/modprobe.d/local.conf by hand, or copy and paste these commands:\nsudo sed -i -e 's/#*\\(install ipv6.*\\)/#\\1/i' /etc/modprobe.d/local.conf\nsudo echo 'install ipv6 /bin/true' | sudo tee -a /etc/modprobe.d/local.conf\nsudo reboot", 
            "active": false, 
            "config_file_path": "/etc/modprobe.d/local.conf"
          }, 
          {
            "comment_character": "", 
            "exportable": true, 
            "config_item": "", 
            "desired_value": "1", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "", 
            "suggestion": "** Ubuntu, Debian systems with disable_ipv6 support in /proc/ **\n\nTo disable IPv6 support on Ubuntu and Debian systems with disable_ipv6 under /proc/, here is an example command that you may need to customize for your environment:\necho '1' | sudo tee /proc/sys/net/ipv6/conf/all/disable_ipv6\n", 
            "active": true, 
            "config_file_path": "/proc/sys/net/ipv6/conf/all/disable_ipv6"
          }, 
          {
            "comment_character": "", 
            "exportable": true, 
            "config_item": "", 
            "desired_value": "1", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "", 
            "suggestion": "** Ubuntu, Debian systems with disable_ipv6 support in /proc/ **\n\nTo disable IPv6 support on Ubuntu and Debian systems with disable_ipv6 under /proc/, here is an example command that you may need to customize for your environment:\necho '1' | sudo tee /proc/sys/net/ipv6/conf/default/disable_ipv6\n", 
            "active": true, 
            "config_file_path": "/proc/sys/net/ipv6/conf/default/disable_ipv6"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "net.ipv6.conf.all.disable_ipv6", 
            "desired_value": "1", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "=", 
            "suggestion": "** Ubuntu, Debian systems with disable_ipv6 support in /proc/ **\n\nTo disable IPv6 support on Ubuntu and Debian systems with disable_ipv6 under /proc/, here are example commands that you may need to customize for your environment.  Either add:\nnet.ipv6.conf.all.disable_ipv6 = 1\nto /etc/sysctl.conf by hand, or copy and paste these commands:\nsudo sed -i -e 's/#*\\(net.ipv6.conf.all.disable_ipv6.*\\)/#\\1/i' /etc/sysctl.conf\necho 'net.ipv6.conf.all.disable_ipv6 = 1' | sudo tee -a /etc/sysctl.conf\n", 
            "active": true, 
            "config_file_path": "/etc/sysctl.conf"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "net.ipv6.conf.default.disable_ipv6", 
            "desired_value": "1", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "=", 
            "suggestion": "** Ubuntu, Debian systems with disable_ipv6 support in /proc/ **\n\nTo disable IPv6 support on Ubuntu and Debian systems with disable_ipv6 under /proc/, here are example commands that you may need to customize for your environment.  Either add:\nnet.ipv6.conf.default.disable_ipv6 = 1\nto /etc/sysctl.conf by hand, or copy and paste these commands:\nsudo sed -i -e 's/#*\\(net.ipv6.conf.default.disable_ipv6.*\\)/#\\1/i' /etc/sysctl.conf\necho 'net.ipv6.conf.default.disable_ipv6 = 1' | sudo tee -a /etc/sysctl.conf\n", 
            "active": true, 
            "config_file_path": "/etc/sysctl.conf"
          }
        ], 
        "name": "Disable IPv6 interfaces"
      }, 
      {
        "comment": "The /var/spool/cron directory contains schedule job data for individual users. These files are a frequent target of abuse by malicious users and software. The permissions on the cron spool directory should be closely protected.\n\nNOTE: User ownership for each file in /var/spool/cron should be set to that file's owner. Only user ownership for the root user is set below. Group ownership should be set to root with an ACL of 700.\n\nThe checks for /var/spool/cron/root and /var/spool/cron/* are not a default OS configuration and are deactivated by default, if you are using /var/spool/cron/root or /var/spool/cron/* then activate these checks.\n", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": true, 
        "active": true, 
        "checks": [
          {
            "files": "/var/spool/cron", 
            "exportable": true, 
            "object_type": "directory_acl", 
            "acls": "NOT: **2,**3,**6,**7", 
            "suggestion": "If a malicious user has the ability to create a file in the /var/spool/cron directory, they can easily deploy persistent or scheduled malware. The /var/spool/cron directory should have an ACL of 700 (on Redhat, Centos, and Fedora) or 755 (on Ubuntu or Debian) and should have root user and group ownership.\n\nIf this check fails, use the chmod command to change the ACL on this directory to 700 or 755:\n\nchmod 700 /var/spool/cron\n    #OR\nchmod 755 /var/spool/cron\n", 
            "active": true
          }, 
          {
            "folders": "/var/spool/cron", 
            "exportable": true, 
            "object_type": "directory_user_ownership", 
            "suggestion": "If a malicious user has the ability to create a file in the /var/spool/cron directory, they can easily deploy persistent or scheduled malware. The /var/spool/cron directory should have an ACL of 600 and should have root user and group ownership.\n\nIf this check fails, use the chown command to set root user and group ownership on this directory:\n\nchown root:root /var/spool/cron\n", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/var/spool/cron", 
            "exportable": true, 
            "object_type": "directory_group_ownership", 
            "suggestion": "If a malicious user has the ability to create a file in the /var/spool/cron directory, they can easily deploy persistent or scheduled malware. The /var/spool/cron directory should have an ACL of 600 and should have root user and group ownership.\n\nIf this check fails, use the chown command to set root user and group ownership on this directory:\n\nchown root:root /var/spool/cron\n", 
            "active": true, 
            "owned_by": "root"
          }, 
          {
            "files": "/var/spool/cron/root", 
            "exportable": true, 
            "object_type": "file_user_ownership", 
            "suggestion": "The /var/spool/cron/root file is the cron spool file for the root user. If a malicious user or automation can read this file they can learn what commands are regularly run as the root user - these executables will then be targeted for malware. If a malicious user has the ability to modify the root cron spool file they can easily deploy persistent or scheduled malware. The /var/spool/cron/root file should have an ACL of 600 and should have root user and group ownership. Significant security misconfiguration of /var/spool/cron/root should be investigated under the assumption of gross system compromise.\n\nIf this check fails, use the chown command to set root user and group ownership on this file:\n\nchown root:root /var/spool/cron/root\n\nNOTE: If the root user has not established cron processes using the root account directly (e.g. using \"crontab -e\" as root) then the /var/spool/cron file may not exist.\n", 
            "active": false, 
            "owned_by": "root"
          }, 
          {
            "files": "/var/spool/cron/root", 
            "exportable": true, 
            "object_type": "file_group_ownership", 
            "suggestion": "The /var/spool/cron/root file is the cron spool file for the root user. If a malicious user or automation can read this file they can learn what commands are regularly run as the root user - these executables will then be targeted for malware. If a malicious user has the ability to modify the root cron spool file they can easily deploy persistent or scheduled malware. The /var/spool/cron/root file should have an ACL of 600 and should have root user and group ownership. Significant security misconfiguration of /var/spool/cron/root should be investigated under the assumption of gross system compromise.\n\nIf this check fails, use the chown command to set root user and group ownership on this file:\n\nchown root:root /var/spool/cron/root\n\nNOTE: If the root user has not established cron processes using the root account directly (e.g. using \"crontab -e\" as root) then the /var/spool/cron file may not exist.\n", 
            "active": false, 
            "owned_by": "root"
          }, 
          {
            "files": "/var/spool/cron/root", 
            "exportable": true, 
            "object_type": "file_acl", 
            "acls": "700", 
            "suggestion": "The /var/spool/cron/root file is the cron spool file for the root user. If a malicious user or automation can read this file they can learn what commands are regularly run as the root user - these executables will then be targeted for malware. If a malicious user has the ability to modify the root cron spool file they can easily deploy persistent or scheduled malware. The /var/spool/cron/root file should have an ACL of 700 and should have root user and group ownership. Significant security misconfiguration of /var/spool/cron/root should be investigated under the assumption of gross system compromise.\n\nIf this check fails, use the chmod command to set this file's ACL to 700:\n\nchmod 700 /var/spool/cron/root\n\nNOTE: If the root user has not established cron processes using the root account directly (e.g. using \"crontab -e\" as root) then the /var/spool/cron file may not exist.\n", 
            "active": false
          }, 
          {
            "files": "/var/spool/cron/*", 
            "exportable": true, 
            "object_type": "file_group_ownership", 
            "suggestion": "All files in the /var/spool/cron directory should be owned by the root user regardless of user ownership. If this check fails, use the chown command to set root group ownership:\n\nchown -R :root /var/spool/cron/*", 
            "active": false, 
            "owned_by": "root"
          }, 
          {
            "files": "/var/spool/cron/*", 
            "exportable": true, 
            "object_type": "file_acl", 
            "acls": "700", 
            "suggestion": "All files in the /var/spool/cron directory should have an ACL of 700. If this check fails, use the chown command to change the ACL on all files:\n\nchmod -R 700 /var/spool/cron/*\n", 
            "active": false
          }
        ], 
        "name": "Protect cron spool directory"
      }, 
      {
        "comment": "Kernel logging services (e.g. syslog or rsyslog) should always be running. Without these services, attackers can abuse the system without accountability. Kernel logging is especially important in detecting and responding to attempts to compromise a system via buffer overflows and other memory-oriented exploits. This rule assumes the more secure rklog service, which is used by default in more recent Linux distributions. This rule should be adjusted if klog is used.", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "processes": "klogd", 
            "exportable": true, 
            "object_type": "process_presence", 
            "suggestion": "**** If you are running a logging daemon other than syslogd, this check will fail.  Please edit this policy and uncheck \"Active\" next to syslogd and check \"Active\" for your logging software. ****\n\nThe most common Linux kernel daemon logging services are klogd, syslog-ng,  and rsyslogd. Only one needs to be running, and one is always enabled by default. If none of these service processes is running, one should be enabled. Unless there is a known reason why the services were disabled, the system should be assumed to be compromised.\n\nThis rule assumes the original syslog service is in use, which is used by default in older Linux distributions. This rule should be adjusted if a different logging program is used.\n\nTo enable syslog, run the following commands (which may need to be adjusted for your environment) (If you are using Debian or Ubuntu you should install the chkconfig utility to help you by running the command: sudo apt-get install sysvconfig).:\nchkconfig sysklogd on\nservice sysklogd start\n", 
            "active": false, 
            "present": "true"
          }, 
          {
            "processes": "syslog-ng", 
            "exportable": true, 
            "object_type": "process_presence", 
            "suggestion": "**** If you are running a logging daemon other than syslog-ng, this check will fail.  Please edit this policy and uncheck \"Active\" next to syslog-ng and check \"Active\" for your logging software. ****\n\nThe most common Linux kernel daemon logging services are klogd, syslog-ng,  and rsyslogd. Only one needs to be running, and one is always enabled by default. If none of these service processes is running, one should be enabled. Unless there is a known reason why the services were disabled, the system should be assumed to be compromised.\n\nThis rule assumes the more secure syslog-ng service is in use, which is used by default in popular Cloud services. This rule should be adjusted if a different logging program is used.\n\nTo enable syslog-ng, run the following commands (which may need to be adjusted for your environment) (If you are using Debian or Ubuntu you should install the chkconfig utility to help you by running the command: sudo apt-get install sysvconfig).:\nchkconfig syslog-ng on\nservice syslog-ng start\n", 
            "active": false, 
            "present": "true"
          }, 
          {
            "processes": "rsyslogd", 
            "exportable": true, 
            "object_type": "process_presence", 
            "suggestion": "**** If you are running a logging daemon other than rsyslog, this check will fail.  Please edit this policy and uncheck \"Active\" next to rsyslog and check \"Active\" for your logging software. ****\n\nThe most common Linux kernel daemon logging services are klogd, syslog-ng,  and rsyslogd. Only one needs to be running, and one is always enabled by default. If none of these service processes is running, one should be enabled. Unless there is a known reason why the services were disabled, the system should be assumed to be compromised.\n\n\nThis rule assumes the more secure rsyslog service is in use, which is used by default in more recent Linux distributions. This rule should be adjusted if a different logging program is used.\n\nTo enable rsyslog, run the following commands (which may need to be adjusted for your environment) (If you are using Debian or Ubuntu you should install the chkconfig utility to help you by running the command: sudo apt-get install sysvconfig).:\nchkconfig rsyslog on\nservice rsyslog start\n", 
            "active": true, 
            "present": "true"
          }
        ], 
        "name": "Kernel logging services should be running"
      }, 
      {
        "comment": "ICMP broadcast can increase the impact of ICMP-based DoS attacks dramatically. If not explicitly needed, ICMP broadcast requests should be ignored.\n\n", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "network_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "comment_character": "", 
            "exportable": true, 
            "config_item": "", 
            "desired_value": "1", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "", 
            "suggestion": "In /etc/sysctl.conf changing the value of net.ipv4.icmp_echo_ignore_broadcasts to the integer 1 will ignore all ICMP broadcast requests.", 
            "active": true, 
            "config_file_path": "/proc/sys/net/ipv4/icmp_echo_ignore_broadcasts"
          }
        ], 
        "name": "Ignore ICMP broadcasts"
      }, 
      {
        "comment": "Most Linux distributions run the Zero Configuration Network (ZEROCONF) automation suite by default. This is a series of dynamic configuration protocols to allow many operating systems to automatically configure themselves and communicate on a network without the need of DHCP or DNS servers. ZEROCONF utilizes the 169.254.0.0/16 network address to autoconfigure using a series of unanswered \"ARP\" queries and then assumes an address if the queries yield an empty result.\n\n", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "network_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": false, 
        "checks": [
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "NOZEROCONF", 
            "desired_value": "true", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "=", 
            "suggestion": "It is very uncommon for a server to require zeroconf networking, and it should be disabled by adding the following line to the file: /etc/sysconfig/network\n\nNOZEROCONF=true\n\nNOTE: the value for the \"NOZEROCONF\" parameter can actually be set to any value, the initscripts only check to determine whether the parameter has zero length. So setting \"NOZEROCONF=no\" will have the same effect as setting it to \"true\". You will need to comment or remove the variable to reactive ZEROCONF.\n", 
            "active": true, 
            "config_file_path": "/etc/sysconfig/network"
          }
        ], 
        "name": "Disable zeroconf networking"
      }, 
      {
        "comment": "Use of rhosts files permits logins from remote IP addresses without authentication. This practice is extremely dangerous. If enables, rhosts can be used as a blunt but effective back-door into a system. When combined with IP spoofing techniques, it can also be abused to issue remote shell commands even if the server is behind a firewall.\n", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "IgnoreRhosts", 
            "desired_value": "NOT:no", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": " ", 
            "suggestion": "The use of rhosts is an extremely dangerous practice. The IgnoreRhosts option should be set to \"yes\" in the sshd_config file. This will prevent the sshd service from recognizing rhosts files under any circumstances.\n\nHere are example commands that you may need to customize for your environment.  Either add:\nIgnoreRhosts yes\nto /etc/ssh/sshd_config by hand, or copy and paste these commands:\nsudo sed -i -e 's/#*\\(IgnoreRhosts.*\\)/#\\1/i' /etc/ssh/sshd_config\necho 'IgnoreRhosts yes' | sudo tee -a /etc/ssh/sshd_config\nsudo service sshd condrestart\n", 
            "active": true, 
            "config_file_path": "/etc/ssh/sshd_config"
          }
        ], 
        "name": "Disable use of .rhosts files"
      }, 
      {
        "comment": "A Linux MTA performs two functions: listening over a network for incoming SMTP e-mail requests and sending\nmail from the local machine. It is not necessary to run the inbound mail listener in order to send email out, but many systems run the inbound mail listener unnecessarily.\n\nThe outbound sendmail MTA runs in queuing mode, periodically attempting to send mail and re-attempting to send mail delayed by network outages or other problems. \n\nSetting DAEMON=no tells sendmail to execute only the outbound queue and never to listen for inbound mail requests.", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": false, 
        "checks": [
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "DAEMON", 
            "desired_value": "no", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "=", 
            "suggestion": "** For Centos, RHEL, and Fedora systems only **\n\nIf the server is not required to receive inbound email, set the DAEMON option in the sendmail configuration to disable the inbound sendmail listener.\n\nHere are example commands that you may need to customize for your environment.  Either add:\nDAEMON=no\nto /etc/sysconfig/sendmail by hand, or copy and paste these commands:\nsudo sed -i -e 's/#*\\(DAEMON.*\\)/#\\1/i' /etc/sysconfig/sendmail\necho 'DAEMON=no' | sudo tee -a /etc/sysconfig/sendmail\nsudo service sendmail condrestart\n", 
            "active": false, 
            "config_file_path": "/etc/sysconfig/sendmail"
          }, 
          {
            "comment_character": "#", 
            "exportable": true, 
            "config_item": "inet_interfaces", 
            "desired_value": "NOT: all", 
            "object_type": "configuration_file_setting", 
            "config_file_section": "", 
            "delimiter": "=", 
            "suggestion": "If the server is not required to receive inbound email, disable incoming connections from other systems.\n\nHere are example commands that you may need to customize for your environment.  Either add:\ninet_interfaces=loopback-only\nto /etc/postfix/main.cf by hand, or copy and paste these commands:\nsudo sed -i -e 's/#*\\(inet_interfaces.*\\)/#\\1/i' /etc/postfix/main.cf\necho 'inet_interfaces=loopback-only' | sudo tee -a /etc/postfix/main.cf\nsudo service postfix condrestart\n", 
            "active": true, 
            "config_file_path": "/etc/postfix/main.cf"
          }
        ], 
        "name": "Disable the sendmail listener if not needed"
      }, 
      {
        "comment": "This rule detects process that are not inherently dangerous, but may not be desired. Often services or other processes get started unexpectedly (e.g. by users) or with a temporary intent but then never get stopped. \n\nOS manufactures and/or hosting services providers may also make assumptions about how a server will be used (e.g. a full Apache/mySQL stack) and activated processes by default. The list below represents common default processes enabled by top Linux distributions and hosting providers.\n\nDepending on the purpose of the servers that this rule applies to, removal of some processes from this rule is expected and appropriate. \n\nAs always, a server should run the minimum number of processes required to perform their designated duties in order to minimize potential vulnerabilities and reduce attack surface area. If your server does not need a process, disable it.\n\nIMPORTANT: Please remember that any process WILL create server exposures if its underlying software is badly configured. We strongly recommend additional rules and checks ensuring reasonable software configuration, process privileges and network access control (if remotely accessible).", 
        "reference_identifiers": [], 
        "log": false, 
        "taxonomy": "system_configuration", 
        "rule_operator": "AND", 
        "alert": false, 
        "critical": false, 
        "active": true, 
        "checks": [
          {
            "processes": "mysqld, mysqld_safe, postgresqld", 
            "exportable": true, 
            "object_type": "process_presence", 
            "suggestion": "*database*\n\nServers should run the minimum number of processes required to perform their designated duties in order to minimize potential vulnerabilities and reduce attack surface area. Many unnecessary processes are enabled by default. If your server does not need a process, disable it.\n\n\nIMPORTANT: Please remember that any process WILL create server exposures if its underlying software is badly configured. We strongly recommend additional rules and checks ensuring reasonable software configuration, process privileges and network access control (if remotely accessible) for any standing process.\n\n\nHere are example commands that you may need to customize for your environment.  (If you are using Debian or Ubuntu you should install the chkconfig utility to help you by running the command: sudo apt-get install sysvconfig).  To disable these services, run:\nsudo chkconfig mysqld off\nsudo service mysqld stop\n\nsudo chkconfig postgresql off\nsudo service postgresql stop\n", 
            "active": false, 
            "present": "false"
          }, 
          {
            "processes": "vncserver, xvnc, rpcbind, portmap", 
            "exportable": true, 
            "object_type": "process_presence", 
            "suggestion": "*remote access*\n\nServers should run the minimum number of processes required to perform their designated duties in order to minimize potential vulnerabilities and reduce attack surface area. Many unnecessary processes are enabled by default. If your server does not need a process, disable it.\n\n\nIMPORTANT: Please remember that any process WILL create server exposures if its underlying software is badly configured. We strongly recommend additional rules and checks ensuring reasonable software configuration, process privileges and network access control (if remotely accessible) for any standing process.\n\nHere are example commands that you may need to customize for your environment.  (If you are using Debian or Ubuntu you should install the chkconfig utility to help you by running the command: sudo apt-get install sysvconfig).  To disable these services, run:\nsudo chkconfig portmap off\nsudo service portmap stop\n\nsudo chkconfig rpcbind off\nsudo service rpcbind stop\n\nsudo chkconfig xvnc off\nsudo service xvnc stop\n\nsudo chkconfig vncserver off\nsudo service vncserver stop\n", 
            "active": true, 
            "present": "false"
          }, 
          {
            "processes": "miniserv.pl, httpd", 
            "exportable": true, 
            "object_type": "process_presence", 
            "suggestion": "**webservers**\n\nServers should run the minimum number of processes required to perform their designated duties in order to minimize potential vulnerabilities and reduce attack surface area. Many unnecessary processes are enabled by default. If your server does not need a process, disable it.\n\n\nIMPORTANT: Please remember that any process WILL create server exposures if its underlying software is badly configured. We strongly recommend additional rules and checks ensuring reasonable software configuration, process privileges and network access control (if remotely accessible) for any standing process.\n\nHere are example commands that you may need to customize for your environment.  (If you are using Debian or Ubuntu you should install the chkconfig utility to help you by running the command: sudo apt-get install sysvconfig).  To disable these services, run:\nsudo chkconfig httpd off\nsudo service httpd stop\n\nsudo chkconfig webmin off\nsudo service webmin stop\n", 
            "active": false, 
            "present": "false"
          }, 
          {
            "processes": "sendmail, spamd, named, nscd, master", 
            "exportable": true, 
            "object_type": "process_presence", 
            "suggestion": "**mail**\n\nServers should run the minimum number of processes required to perform their designated duties in order to minimize potential vulnerabilities and reduce attack surface area. Many unnecessary processes are enabled by default. If your server does not need a process, disable it.\n\n\nIMPORTANT: Please remember that any process WILL create server exposures if its underlying software is badly configured. We strongly recommend additional rules and checks ensuring reasonable software configuration, process privileges and network access control (if remotely accessible) for any standing process.\n\n\nHere are example commands that you may need to customize for your environment.  (If you are using Debian or Ubuntu you should install the chkconfig utility to help you by running the command: sudo apt-get install sysvconfig).  To disable these services, run:\nsudo chkconfig sendmail off\nsudo service sendmail stop\nsudo chkconfig spamassassin off\nsudo service spamassassin stop\nsudo chkconfig named off\nsudo service named stop\nsudo chkconfig nscd off\nsudo service nscd stop\nsudo chkconfig postfix off\nsudo service postfix stop\n", 
            "active": false, 
            "present": "false"
          }, 
          {
            "processes": "rpcsvcgssd, nfs, nmbd, smbd", 
            "exportable": true, 
            "object_type": "process_presence", 
            "suggestion": "*file service*\n\nServers should run the minimum number of processes required to perform their designated duties in order to minimize potential vulnerabilities and reduce attack surface area. Many unnecessary processes are enabled by default. If your server does not need a process, disable it.\n\n\nIMPORTANT: Please remember that any process WILL create server exposures if its underlying software is badly configured. We strongly recommend additional rules and checks ensuring reasonable software configuration, process privileges and network access control (if remotely accessible) for any standing process.\n\nHere are example commands that you may need to customize for your environment.  (If you are using Debian or Ubuntu you should install the chkconfig utility to help you by running the command: sudo apt-get install sysvconfig).  To disable these services, run:\nsudo chkconfig smb off\nsudo service smb stop\nsudo chkconfig nmb off\nsudo service nmb stop\nsudo chkconfig rpcsvcgssd off\nsudo service rpcsvcgssd stop\nsudo chkconfig rpcidmapd off\nsudo service rpcidmapd stop\nsudo chkconfig rpcgssd off\nsudo service rpcgssd stop\nsudo chkconfig nfslock off\nsudo service nfslock stop\nsudo chkconfig nfs off\nsudo service nfs stop\n", 
            "active": false, 
            "present": "false"
          }
        ], 
        "name": "Find potentially unwanted processes"
      }
    ], 
    "id": "b9201960dbec0132fdd73c764e10c221", 
    "description": "This policy checks for tighter security of settings used in common versions of Ubuntu (and other Debian-based) Linux distributions.  It is available as an option for further enhancement of the security provided in the OS Core (Debian-based Linux) v3\" policy."
  }
}